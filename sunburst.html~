<!DOCTYPE html>
<meta charset="utf-8">
<style>
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
  width: 960px;
}

text {
  font: 10px sans-serif;
}
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
<script>
var width = 960,
    height = 550,
    radius = Math.min(width, height) / 2;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

//var date1 = "2012-01-01"; //test dates
//var date2 = "2013-01-01";

// var parseDate = d3.time.format("%Y-%m-%d").parse; //date parser for the diffstats format

var pie = d3.layout.pie()
		.value(function(d){ return +d.bives; })
    .sort(null);

var arc = d3.svg.arc()
    .innerRadius(radius - 125)
    .outerRadius(radius - 45);

d3.tsv("diffstats", function(d) {
	return {model: d.model,
					unix: +d.unix,
					unixinsert: +d.unixinsert,
					unixdelete: +d.unixdelete,
					bives: +d.bives,
					bivesinsert: +d.bivesinsert,
					bivesdelete: +d.bivesdelete,
					bivesmove: +d.bivesmove,
					bivesupdate: +d.bivesupdate,
	};

}, function(error, rows) {
	var newRows = rows.filter(function(d){ return d.model === "MODEL1011080000.xml";}); //example filter
	console.log(newRows);
	var path = svg.datum(newRows).selectAll("path")
    .data(pie)
  .enter().append("path")
    .attr("fill", function(d, i) { alert("test"); return color(i); })
    .attr("d", arc)
    .each(function(d) { this._current = d; }); // store the initial angles
	console.log("test");
});

var margin = {top: 10, right: 5, bottom: 5, left: 45}, timewidth = 200, timeheight = 200;

var x = d3.scale.linear()
					.range([timewidth, 0]);

var y = d3.scale.linear()
					.range([timeheight, 0]);

var xAxis = d3.svg.axis()
							.scale(x)
							.orient("bottom");

var yAxis = d3.svg.axis()
							.scale(x)
							.orient("left");		//evtl. tickFormat f√ºr Achsensplit????


var svg = d3.select("#choiceChart").append("svg")
		  .attr("width", timewidth + margin.left + margin.right)
		  .attr("height", timeheight + margin.top + margin.bottom)
		.append("g")
		  .attr("transform", "translate(100,100)");

var parseDate = d3.time.format("%Y-%m-%d").parse;

d3.tsv("diffstats", function(error, d){
	//if(error) throw error;
	console.log(d);
	return {version2: parseDate(d.version2)
	};
}, function(error, data){

	var newData = {};
	newData.forEach(function(r) {
  	if (!counts[r.Year]) {
    	counts[r.Year] = 0;
    }
    counts[r.Day]++;

	var dataset = [];
	Object.keys(counts).forEach(function(key) {
		dataset.push({
	    year: key,
	    count: counts[key]
		});

});	
});
});
</script>
<script src="choiceChart.js"></script>


